n = int(input())
dp = [[1, 1, 1]]
for _ in range(n-1):
    dp.append([sum(dp[-1]), dp[-1][0]+dp[-1][1], dp[-1][0]+dp[-1][1]])
    dp.pop(0)
print(sum(dp[-1]) % 9901)
# n*2 배열이니까 사자는 0마리부터 최대 n 마리까지
# 0마리는 1 가지, 1마리는 n 가지, ... n 마리는 2 가지
# 무조건 처음은 1, 마지막은 2
# 그 사이에 뭐가 들어오는데 2일땐 4, 3일땐 6+8, 4일땐 8+18+12, 5일땐 10+32+?+? ...

# 이렇게했다간 답도 없으니 저번에 집 색깔 칠하는 문제처럼 풀어본다면
# n행에 사자가 없는 경우. 0열에 있는 경우. 1열에 있는 경우로 나누면 어떨지
# n-1 행이 어떤모습인지에 따라 n 행의 모습도 달라짐. => DP

# 메모리 초과 까비쓰
# 앞에꺼 pop 해서 메모리초과 해결, 992 ms