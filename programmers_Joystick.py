def solution(name):
    answer = 0
    alphaDict = {'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4,
                 'F': 5, 'G': 6, 'H': 7, 'I': 8, 'J': 9,
                 'K': 10, 'L': 11, 'M': 12, 'N': 13, 'O': 12,
                 'P': 11, 'Q': 10, 'R': 9, 'S': 8, 'T': 7,
                 'U': 6, 'V': 5, 'W': 4, 'X': 3, 'Y': 2,
                 'Z': 1}

    return answer


solution("JEROEN")
solution("JAN")

# 먼저 알파벳 변경부터 생각하면 알파벳 개수가 26개니까 최대 이동 횟수는 13이고,
# A 기준으로는 N이 13번 이동.
# ord(c) - ord('A') 가 13 이하면 수식 그대로. 넘어가면 ... 다른 수식을 적용.
# 할 방법을 생각했으나... 그냥 딕셔너리쓰는게 더 빠를걸.

# 커서는 어느쪽으로 이동하는게 더 빠를지를 정하고 싶은데
# AAAAAMMA 이런 식이면 왼쪽으로 가는게 빠르고(커서 이동 3회)
# AMMAAAAA 이런 식이면 오른쪽으로 가는게 빠르다(커서 이동 2회)
# AMMAAMMA 이런 식이면 오른쪽.(오른쪽 6회, 왼쪽 7회)
# AAMMAMMA 이런 식이면 동일하게 6회 이동
