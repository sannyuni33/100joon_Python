n = int(input())
timeTable, res = [], 0
for _ in range(n):
    timeTable.append(list(map(int, input().split())))
timeTable = sorted(timeTable, key=lambda x: (x[1], x[0]))
curr = 0
for i in range(n):
    if timeTable[i][0] >= curr:  # 다음 회의 시작시간이 끝난 시간 이후라면
        res += 1
        curr = timeTable[i][1]
print(res)

# 시간표짜기 문제에 사용되는 그리디 알고리즘은
# 1. 끝나는 시간별로 정렬한다.
# 2. 맨 앞 스케줄먼저 소화한다.
# 3. 그 다음으로 종료 시간이 빠른 스케줄의 시작 시간을 확인한다.
# 4. 그 앞의 스케줄과 안 겹치면 스케줄에 추가한다.
# 5. 끝까지 반복한다.

# 15
# 1 4
# 7 7
# 3 5
# 0 6
# 5 7
# 3 8
# 5 9
# 6 10
# 8 11
# 8 12
# 7 7
# 7 7
# 7 7
# 2 13
# 12 14

# 이 입력은 8이 정답인데 7이 출력된다. 요거가지고 고쳐보자.
# 중간에 [7, 7], [5, 7], [7, 7], [7, 7], [7, 7] 이렇게 정렬된걸 볼 수 있다.
# 끝나는 시간이 같은 회의끼리는 시작하는 시간이 빠른 순서로 정렬한다면 해결될 듯
# 엥... 맞긴했는데 시간이 5188 ms.....
#